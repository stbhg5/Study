
- Struts1 프레임워크 세팅
http://www.apache.org

https://struts.apache.org/ - 의 Struts (여기껀 Struts2이다 - My Batis 쓴다.)

https://struts.apache.org/download.cgi#struts2526

Struts 1.3.10의 Full Distribution: struts-1.3.10-all.zip 저장

예전 아랫버전 struts-2.3.1.1-all.zip(지금은 막혀서 선생님께 파일로 받음), Struts 2.5.26은 메이븐을 써서 지금은 못 쓴다.

https://blog.mybatis.org/ - ibatis2.0(Struts2와 연결된 것 많다), MyBatis3.0(스프링 연결) 제공하는 블로그

ibatis2.0 지금은 막혀서 다운받기 어렵다.

http://code.google.com/p/mybatis/downloads/list - 여기도 2.0 없어짐

ibatis-2.3.4.726.zip - (선생님께 마지막 2.0버전 받음)

[Framework 종류]

1. Struts Framework
2. 하이버네이트(Hibernate) Framework
3. 아이바티스(iBatis) Framework
4. 레일즈(Rails) Framework
5. Struts2 Framework
6. Spring Framework

Struts와 Struts2는 다른 프레임워크다. 버전업X
2~4는 DB에 관련된 프레임워크, 즉 JDBC편하게 쓰기 위해서 나옴.
우리나라는 iBatis만, 유럽에선 Hibernate 쓴다. Rails 유럽에서 쓰다 요즘은 안씀.
1,5,6 은 코딩 프레임 워크.


우클릭 - New - 다이나믹 웹 프로젝트 - struts1 프로젝트 만들기 - web.xml 만들기 꼭 체크!!

서버설정 study 빼고(remove) struts1 넣기(Add all)

라이브러리 폴더의 jstl,standard,ojdbc6(DB연결) study에서 복사하여 struts1의 라이브러리 폴더에 붙여넣기
study의 com.util의 DBCPConn,FileManager,MyUtil 복사하여 struts1의 src에 com.util패키지 만들어 붙여넣기

서버 실행!

http://localhost:8080/struts1/ - 들어가서 잘 돌아가나 확인

struts-1.3.10-all.zip의 lib 폴더가 struts1 프레임워크 구현하기 위한 라이브러리 20개. 이것들 struts1의 라이브러리로 복사

web.xml 들어가기

<!-- Strut1 -->
  <!-- *.do이 스트럿츠의 Default -->
  <!-- org.apache.struts.action.ActionServlet은 스트럿츠 문법검사 : 라이브러리 struts-core-1.3.10.jar에 있다. -->
  <!-- 환경설정 /WEB-INF/struts-config.xml(공용:없어도 상관없다.),/WEB-INF/struts-config_temp.xml(개인적:프로젝트 수에 따라 개수 늘어난다) -->
  <!-- 프레임워크 환경설정은 xml파일로 한다!! -->
  <!-- load-on-startup : 어노테이션 우선순위 2순위 -->
  <servlet>
  	<servlet-name>action</servlet-name>
  	<servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
  	<init-param>
  		<param-name>config</param-name>
  		<param-value>
  			/WEB-INF/struts-config.xml,
  			/WEB-INF/struts-config_temp.xml
  		</param-value>
  	</init-param>
  	<load-on-startup>2</load-on-startup>
  </servlet>
	
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

WEB-INF - struts-config.xml 만들기

여기서 선생님께서 보내주신 것
<global-forwards>
        <!-- Default forward to "Welcome" action -->
        <!-- Demonstrates using index.jsp to forward -->
        <forward
            name="welcome"
            path="/Welcome.do"/>
    </global-forwards>

<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts-config
PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 1.3//EN"
"http://struts.apache.org/dtds/struts-config_1_3.dtd">

<struts-config>

<!-- 

	<global-forwards>
        <forward
            name="welcome"
            path="/Welcome.do"/>
    </global-forwards>

	<form-bean
            name="logonForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property
                name="username"
                type="java.lang.String"/>
            <form-property
                name="password"
                type="java.lang.String"/>
       </form-bean>

 -->

</struts-config>

WEB-INF - struts-config_temp.xml 만들기 (복사해서 갖다쓸 템플릿)

<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts-config
PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 1.3//EN"
"http://struts.apache.org/dtds/struts-config_1_3.dtd">

<struts-config>



</struts-config>


  프레임워크 유지관리 쉬워졌지만 프로그래머 수준도 높아졌다.
  Struts2도 이렇게 세팅한다.

http://localhost:8080/struts1/ 실행되나 확인, 되면 이상없이 실행!!

study의 com.filter - CharsetEncodingFilter 복사하여 struts1의 src에 com.filter패키지 만들어 붙여넣기

study의 web.xml에서 struts1의 web.xml에

<!-- CharsetEncoding Filter -->
  <!-- CharsetEncodingFilter의 init메소드까지 2중으로 안전장치 함!! -->
  <filter>
  	<filter-name>CharsetEncodingFilter</filter-name>
  	<filter-class>com.filter.CharsetEncodingFilter</filter-class>
  	<init-param>
  		<param-name>charset</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  </filter>
  <filter-mapping>
  	<filter-name>CharsetEncodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
  <!-- DBCP연결 -->
  <resource-ref>
  	<description>Oracle DataSource</description>
  	<res-ref-name>jdbc/myOracle</res-ref-name>
  	<res-type>javax.sql.DataSource</res-type>
  	<res-auth>Container</res-auth>
  </resource-ref>

복사하여 붙여넣기
